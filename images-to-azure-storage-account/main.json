{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.16.2.56959",
      "templateHash": "9944908891468855965"
    }
  },
  "parameters": {
    "publisherEmail": {
      "type": "string",
      "metadata": {
        "description": "Email address to receive system notifications sent from API Management."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location to deploy all resources in."
      }
    }
  },
  "variables": {
    "commonName": "[format('image-upload-{0}', uniqueString(resourceGroup().id))]",
    "storageBlobDataContributorRoleId": "ba92f5b4-2d11-453d-a403-e96b0029c9fe"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}/{2}', format('image{0}', uniqueString(resourceGroup().id)), 'default', 'images')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('image{0}', uniqueString(resourceGroup().id)), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}', format('image{0}', uniqueString(resourceGroup().id)), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', format('image{0}', uniqueString(resourceGroup().id)))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "name": "[format('{0}/{1}/{2}/{3}', variables('commonName'), 'azurestorage', 'get', 'policy')]",
      "properties": {
        "format": "rawxml",
        "value": "            <policies>\n              <inbound>\n                <base />\n              </inbound>\n              <backend>\n                <base />\n              </backend>\n              <outbound>\n                <base />\n                <mock-response status-code=\"200\" content-type=\"application/json\" />\n              </outbound>\n              <on-error>\n                <base />\n              </on-error>\n            </policies>\n          "
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', variables('commonName'), 'azurestorage', 'get')]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "name": "[format('{0}/{1}/{2}/{3}', variables('commonName'), 'azurestorage', 'post', 'policy')]",
      "properties": {
        "format": "rawxml",
        "value": "            <policies>\n              <inbound>\n                <check-header name=\"Content-Type\" failed-check-httpcode=\"400\" failed-check-error-message=\"Unsupported Content-Type header, use image/jpeg\">\n                  <value>image/jpeg</value>\n                </check-header>\n                <check-header name=\"content-disposition\" failed-check-httpcode=\"400\" failed-check-error-message=\"Missing header content-disposition\" />\n                <set-variable name=\"BlobName\" value=\"@{\n                  string contentDisposition = context.Request.Headers.GetValueOrDefault(\"content-disposition\");\n                  var regex = new Regex(\"filename=\\\"(?<filename>.*)\\\"\");\n                  var match = regex.Match(contentDisposition);\n                  var filename = match.Groups[\"filename\"].Value;\n                  return filename;\n                }\" />\n                <choose>\n                  <when condition=\"@(context.Variables.GetValueOrDefault(\"BlobName\") == \"\")\">\n                    <return-response>\n                      <set-status code=\"400\" reason=\"Bad request\" />\n                      <set-body>@(new JObject(new JProperty(\"statusCode\", 400), new JProperty(\"message\", \"Incorrect format provided in content-disposition header\")).ToString())</set-body>\n                    </return-response>\n                  </when>\n                </choose>\n                <base />\n                <set-variable name=\"BlobEndpoint\" value=\"{{BlobEndpoint}}\" />\n                <set-variable name=\"ContainerName\" value=\"{{ContainerName}}\" />\n                <set-method>PUT</set-method>\n                <set-header name=\"x-ms-version\" exists-action=\"override\">\n                  <value>2020-06-12</value>\n                </set-header>\n                <set-header name=\"x-ms-blob-type\" exists-action=\"override\">\n                  <value>BlockBlob</value>\n                </set-header>\n                <set-backend-service base-url=\"@{\n                  string blobEndpoint = context.Variables.GetValueOrDefault<string>(\"BlobEndpoint\");\n                  string containerName = context.Variables.GetValueOrDefault<string>(\"ContainerName\");\n                  string blobName = context.Variables.GetValueOrDefault<string>(\"BlobName\");\n                  return String.Format(\"{0}{1}/{2}\", blobEndpoint, containerName, blobName);\n                }\" />\n                <authentication-managed-identity resource=\"https://storage.azure.com/\" />\n              </inbound>\n              <backend>\n                <base />\n              </backend>\n              <outbound>\n                <base />\n              </outbound>\n              <on-error>\n                <base />\n              </on-error>\n            </policies>\n          "
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', variables('commonName'), 'azurestorage', 'post')]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "name": "[format('{0}/{1}/{2}', variables('commonName'), 'azurestorage', 'get')]",
      "properties": {
        "displayName": "Test recipient",
        "urlTemplate": "/",
        "method": "GET"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', variables('commonName'), 'azurestorage')]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "name": "[format('{0}/{1}/{2}', variables('commonName'), 'azurestorage', 'post')]",
      "properties": {
        "displayName": "Send image",
        "urlTemplate": "/",
        "method": "POST"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', variables('commonName'), 'azurestorage')]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/subscriptions",
      "apiVersion": "2021-01-01-preview",
      "name": "[format('{0}/{1}', variables('commonName'), 'AxisDeviceSubscription')]",
      "properties": {
        "scope": "[resourceId('Microsoft.ApiManagement/service/apis', variables('commonName'), 'azurestorage')]",
        "displayName": "Axis Device Subscription"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', variables('commonName'), 'azurestorage')]",
        "[resourceId('Microsoft.ApiManagement/service', variables('commonName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/namedValues",
      "apiVersion": "2021-01-01-preview",
      "name": "[format('{0}/{1}', variables('commonName'), 'BlobEndpoint')]",
      "properties": {
        "displayName": "BlobEndpoint",
        "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', format('image{0}', uniqueString(resourceGroup().id))), '2022-09-01').primaryEndpoints.blob]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('commonName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('image{0}', uniqueString(resourceGroup().id)))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/namedValues",
      "apiVersion": "2021-01-01-preview",
      "name": "[format('{0}/{1}', variables('commonName'), 'ContainerName')]",
      "properties": {
        "displayName": "ContainerName",
        "value": "images"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('commonName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', format('image{0}', uniqueString(resourceGroup().id)), 'default', 'images')]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2021-01-01-preview",
      "name": "[format('{0}/{1}', variables('commonName'), 'azurestorage')]",
      "properties": {
        "displayName": "AzureStorage",
        "subscriptionRequired": true,
        "subscriptionKeyParameterNames": {
          "query": "accessToken"
        },
        "serviceUrl": "[reference(resourceId('Microsoft.Storage/storageAccounts', format('image{0}', uniqueString(resourceGroup().id))), '2022-09-01').primaryEndpoints.blob]",
        "protocols": [
          "https"
        ],
        "path": "/"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('commonName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('image{0}', uniqueString(resourceGroup().id)))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[format('image{0}', uniqueString(resourceGroup().id))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2"
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-08-01-preview",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}/blobServices/{1}/containers/{2}', format('image{0}', uniqueString(resourceGroup().id)), 'default', 'images')]",
      "name": "[guid(resourceGroup().id)]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.ApiManagement/service', variables('commonName')), '2021-01-01-preview', 'full').identity.principalId]",
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('storageBlobDataContributorRoleId'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('commonName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', format('image{0}', uniqueString(resourceGroup().id)), 'default', 'images')]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service",
      "apiVersion": "2021-01-01-preview",
      "name": "[variables('commonName')]",
      "location": "[parameters('location')]",
      "sku": {
        "capacity": 0,
        "name": "Consumption"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "publisherEmail": "[parameters('publisherEmail')]",
        "publisherName": "[variables('commonName')]"
      }
    }
  ],
  "outputs": {
    "endpoint": {
      "type": "string",
      "value": "[format('{0}?accessToken={1}', reference(resourceId('Microsoft.ApiManagement/service', variables('commonName')), '2021-01-01-preview').gatewayUrl, reference(resourceId('Microsoft.ApiManagement/service/subscriptions', variables('commonName'), 'AxisDeviceSubscription'), '2021-01-01-preview').primaryKey)]"
    }
  }
}